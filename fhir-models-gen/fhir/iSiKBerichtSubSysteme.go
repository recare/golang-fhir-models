// Copyright 2019 - 2021 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import "encoding/json"

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// ISiKBerichtSubSysteme is documented here https://gematik.de/fhir/ISiK/StructureDefinition/ISiKBerichtSubSysteme
type ISiKBerichtSubSysteme struct {
	Id            string    `bson:"id" json:"id"`
	Meta          *Meta     `bson:"meta,omitempty" json:"meta,omitempty"`
	ImplicitRules *string   `bson:"implicitRules,omitempty" json:"implicitRules,omitempty"`
	Language      *string   `bson:"language,omitempty" json:"language,omitempty"`
	Text          Narrative `bson:"text" json:"text"`
}
type OtherISiKBerichtSubSysteme ISiKBerichtSubSysteme

// MarshalJSON marshals the given ISiKBerichtSubSysteme as JSON into a byte slice
func (r ISiKBerichtSubSysteme) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		OtherISiKBerichtSubSysteme
		ResourceType string `json:"resourceType"`
	}{
		OtherISiKBerichtSubSysteme: OtherISiKBerichtSubSysteme(r),
		ResourceType:               "ISiKBerichtSubSysteme",
	})
}

// UnmarshalISiKBerichtSubSysteme unmarshals a ISiKBerichtSubSysteme.
func UnmarshalISiKBerichtSubSysteme(b []byte) (ISiKBerichtSubSysteme, error) {
	var iSiKBerichtSubSysteme ISiKBerichtSubSysteme
	if err := json.Unmarshal(b, &iSiKBerichtSubSysteme); err != nil {
		return iSiKBerichtSubSysteme, err
	}
	return iSiKBerichtSubSysteme, nil
}
